# This is a basic workflow to help you get started with Actions

name: Angular Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
        with:
          node-version: '12.x'
      - name: Install
        working-directory: ./af-client
        run: npm install
      - name: Build Prod
        working-directory: ./af-client
        run: npm run build:prod
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.ECR_PUBLISHER_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.ECR_PUBLISHER_SECRET_ACCESS_KEY_ID}}
          aws-region: ${{secrets.ECR_REGION}}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, Tag, Push to ECR
        working-directory: ./af-client
        env:
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
          ECR_REPOSITORY: ${{secrets.AF_CLIENT_ECR_REPO}}
          IMAGE_TAG: ${{github.sha}}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: EKS kubectl
        uses: cancue/eks-action@v0.0.3 
        env:
          DEPLOYMENT_NAME: af-client
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
          ECR_REPOSITORY: ${{secrets.AF_CLIENT_ECR_REPO}}
          IMAGE_TAG: ${{github.sha}}
          aws_access_key_id: ${{ secrets.ECR_PUBLISHER_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.ECR_PUBLISHER_SECRET_ACCESS_KEY_ID }}
          aws_region: ${{ secrets.ECR_REGION }}
          cluster_name: ${{ secrets.EKS_ASSIGNFORCE_CLUSTER_NAME }}
        with:
          args: |
            kubectl set image deployment/$DEPLOYMENT_NAME -n default $DEPLOYMENT_NAME=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG &&
            kubectl rollout status deployment/$DEPLOYMENT_NAME -n default
        
        
        
        
        
        
